buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath("com.moowork.gradle:gradle-node-plugin:1.1.1")
    }
}

//apply plugin: 'com.moowork.node'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.dbbyte'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

// custom work
//node {
//    version = '8.9.1'
//    download = true
//    nodeModulesDir = file("frontend")
//}

////// build frontend source file
//task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
//    group = 'build'
//    description = 'Compile client side folder for development'
//    args = ['run', 'buildDev']
//}
////// build jar file - production
//task buildClient(type: NpmTask, dependsOn: 'npmInstall') {
//    group = 'build'
//    description = "Compile client side folder for production"
//    args = ['run', 'build']
//}
////// watch files that are build and move them from frontend to web folder
//task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
//    group = 'application'
//    description = "Build and watches the client side assets for rebuilding"
//    args = ['run', 'buildWatch']
//}
//bootRun.dependsOn(buildClientDev)
//jar.dependsOn(buildClient)